#                   _
#   _ __ ___  _   _| |_ _ __ ___  _   ___  __
#  | '_ ` _ \| | | | __| '_ ` _ \| | | \ \/ /
#  | | | | | | |_| | |_| | | | | | |_| |>  <
#  |_| |_| |_|\__, |\__|_| |_| |_|\__,_/_/\_\
#              |___/
#
# tmux is a terminal multiplexer


# -- general -------------------------------------------------------------------

set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',xterm-256color:RGB'
#set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -s escape-time 0
set -sg repeat-time 300
set -s focus-events on
set -g mouse on
set -sg exit-empty on

set -g visual-activity off
setw -g monitor-activity off
setw -g monitor-bell off

set -g history-limit 10000

set -g prefix2 C-x                        # GNU-Screen compatible prefix
bind C-x send-prefix -2

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

# edit configuration
bind e new-window -n "~/.tmux.conf.local" "sh -c '\${EDITOR:-vim} ~/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# app
# htop (prefix !)
bind ! splitw htop


# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

# pane border
#set-option -g pane-border-style fg=colour235 #fg=base02
#set-option -g pane-active-border-style fg=colour240 #fg=base01

# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session
# $：重命名当前会话
# 启动命名tmux              tmux new -s <name>
# 分离会话                  tmux detach
# 重接会话                  tmux attach -t <name>
# 杀死会话                  tmux kill-session -t <name>
# 切换会话                  tmux switch -t <name>

# 列出所有快捷键，及其对应的 Tmux 命令           tmux list-keys
# 列出所有 Tmux 命令及其参数                     tmux list-commands
# 列出当前所有 Tmux 会话的信息                   tmux info

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind = split-window -v
# split current window vertically
bind - split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
# q 显示窗格的编号（和尺寸），此时可通过按下数字切换（使用后面的主题后数字切换失效）
# o：交换窗格（将输入切换到下一个窗格）

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
# c：新建窗口
# 0~9 选择几号窗口
# w：列出所有窗口，此时可通过方向键和回车键切换
# n：切换到后一个窗口（使用后面的主题后失效）
# p：切换到前一个窗口（使用后面的主题后失效）
# ,：重命名当前窗口（不知是否可以在创建时就命名）
# &：关闭当前窗口。
bind Tab last-window        # move to last active window

# toggle mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"

# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
#run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'


# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
#run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
#run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
#run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
#run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'??,

# -- statue mode ---------------------------------------------------------------
#set -g status-utf8 on # 状态栏支持utf8
#set -g status-interval 1 # 状态栏刷新时间
#set -g status-justify left # 状态栏列表左对齐
#setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知

#set -g status-fg yellow # 设置状态栏前景黄色
#set -g status-style "bg=black, fg=yellow" # 状态栏前景背景色

#set -g status-left "#[bg=#FF661D] ✡ #S " # 状态栏左侧内容
#set -g status-right '#{pane_current_path} %H:%M ' # 状态栏右侧内容 Continuum status: #{continuum_status}
#set -g status-left-length 300 # 状态栏左边长度300
#set -g status-right-length 500 # 状态栏左边长度500

#set -wg window-status-format " #I #W " # 状态栏窗口名称格式
#set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
#set -wg window-status-separator "" # 状态栏窗口名称之间的间隔
#set -wg window-status-current-style "bg=red" # 状态栏当前窗口名称的样式
#set -wg window-status-last-style "fg=red" # 状态栏最后一个窗口名称的样式

#set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色

# -- toggle_status
bind s if-shell '[[ $(tmux show -g status | cut -d\  -f2) == "on" ]]' \
'set -g status off' \
'set -g status on'

# -- theme
#set -g status off

# panes
#setw -g pane-border-status bottom
setw -g pane-border-format '#[bold]#{?#{&&:#{pane_active},#{client_prefix}},#[underscore],}\
#{?pane_active,❐ #S:#I/#{session_windows} ,}#{?window_zoomed_flag,⬢,❄} #P ⇒ #{pane_tty} #{pane_current_command}'
#set -g pane-active-border-style fg=brightblue
#set -g pane-border-style fg=magenta

# windows
set -g status-justify 'centre'
set -g status-left-length 90
set -g status-right-length 140
setw -g window-status-separator ''

# default statusbar colors
set -g status-bg black
#set -g status-left ' #[fg=magenta,bold]❐ #S'
#set -g status-left '#[fg=brightyellow] #{?client_prefix,⌨ ,  }  #[fg=magenta,bold] %Y-%m-%d %H:%M '
#set -g status-right '#(rainbarf --battery --remaining --bolt --tmux --rgb)'
#set -g status-left "#[fg=magenta,bold] %Y-%m-%d %H:%M | #[fg=brightblue]#(curl icanhazip.com) #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
setw -g window-status-format '#[fg=brightblue] #I #W '
setw -g window-status-current-format '#[fg=magenta,bold] #I #W:#F'
setw -g window-status-activity-style bg=black
setw -g window-status-bell-style bg=black
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"


set-option -g status-left "#(~/.config/tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.config/tmux/tmux-powerline/powerline.sh right)"

run-shell ~/.config/tmux/extrakto/extrakto.tmux
#set-option -g status-utf8 on
#set -g status-left '#(rainbarf --battery --remaining --bolt --rgb)'

#set-option default-path "$PWD"


# EOF
# update_env_event() {
#     local event='client-attached'
#     local event_dir=${TMUX%%,*}-event
#     mkdir -p $event_dir 2>/dev/null
#     rm $event_dir/$event-pane* 2>/dev/null
#     tmux list-panes -a -F '#D' | sed -E "s|^(.*)$|$event_dir/$event-pane-\1|g" | xargs touch
# }
#
# "$@"
