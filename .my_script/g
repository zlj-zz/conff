#!/usr/bin/env sh
g() {
  # adjust wether has git
  if command -v git >/dev/null 2>&1; then
    # process command
    case $1 in
      's')git status ${@:2:$((${#@}))};;

      "p")git pull ${@:2:$((${#@}))};;

      "P")git push ${@:2:$((${#@}))};;

      "PP")git push --force;;

      'f')
          if [[ $2  && ! \($3\) ]]; then
              git fetch origin $2:$2
          else
              git fetch ${@:2:$((${#@}))}
          fi
          ;;

      'h')
          if [[ $2 == 'p' ]]; then
              git stash pop
          else
              git stash ${@:2:$((${#@}))}
          fi
          ;;

      "a")
          if [[ $2 ]]; then
              git add ${@:2:$((${#@}))}
          else
              git add .
          fi
          ;;

      "A")git commit --amend;;

      'c')git commit ${@:2:$((${#@}))};;

      'k')git checkout ${@:2:$((${#@}))};;

      "m")
          if [[ $2 ]]; then
              git merge ${@:2:$((${#@}))}
          else
              git merge origin/master
          fi
          ;;

      'd')git diff ${@:2:$((${#@}))};;

      'l')
          if [[ $2 == '1' ]]; then
              git log --graph --all --decorate --oneline ${@:3:$((${#@}))}
          else
              git log --graph --all --decorate ${@:2:$((${#@}))}
          fi
          ;;

      'r')git reset ${@:2:$((${#@}))};;

      'savepd')git config credential.helper store;;

      '-h')
          echo "usage: g <command> [<args>]\n\n"\
          "These are short commands that can replace git operations:\n"\
          "    s       \033[33m--:\033[0m git status\n"\
          "    p       \033[33m--:\033[0m git push\n"\
          "    P       \033[33m--:\033[0m git push\n"\
          "    PP      \033[33m--:\033[0m git push --force\n"\
          "    a       \033[33m--:\033[0m git add .\n"\
          "               g a [file] ... \n"\
          "    c       \033[33m--:\033[0m git commit\n"\
          "    A       \033[33m--:\033[0m git commit --amend \n"\
          "    f       \033[33m--:\033[0m git fetch \n"\
          "               g f [branch-name] \n"\
          "    k       \033[33m--:\033[0m git checkout \n"\
          "    d       \033[33m--:\033[0m git diff \n"\
          "    m       \033[33m--:\033[0m git merge origin/master \n"\
          "               g m [branch-name] \n"\
          "    l       \033[33m--:\033[0m git log --graph --all --decorate \n"\
          "               g l 1    --: git log --graph --all --decorate --oneline \n"\
          "    h       \033[33m--:\033[0m git stash \n"\
          "               g h p     --: git stash pop \n"\
          "    r       \033[33m--:\033[0m git reset \n"\
          "    savepd  \033[33m--\033[0m Remember your account number and password \n"\
          ;;

      *)git $@
    esac
  else
    echo -e 'No git, please install git first.'
  fi
}

g $@
